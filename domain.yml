version: "3.1"

intents:
  - приветствие
  - прощание
  - запрос_помощи
  - описание_архитектуры
  - выбор_технологий
  - микросервисы
  - монолит
  - интеграция_систем
  - безопасность
  - производительность
  - масштабируемость
  - отказоустойчивость
  - DevOps
  - контейнеризация
  - выбор_базы_данных
  - методологии_разработки
  - архитектурные_паттерны
  - документация
  - облачные_технологии
  - архитектурные_решения
  - сервисная_сеть
  - микросервисная_архитектура
  - мониторинг_микросервисов
  - безопасность_микросервисов
  - оркестрация_микросервисов
  - тестирование_микросервисов
  - отказоустойчивость_микросервисов

responses:
  utter_greet:
    - text: "Привет! Как я могу вам помочь?"

  utter_goodbye:
    - text: "До свидания! Если у вас будут вопросы — обращайтесь!"

  utter_help:
    - text: "Чем я могу вам помочь?"

  utter_describe_architecture:
    - text: "Архитектура решений — это структурный подход к проектированию и реализации IT-систем.
     Принятие архитектурных решений должно основываться на анализе требований, рисков и стоимости реализации."

  utter_choose_tech_stack:
    - text: "Для выбора технологий нужно учитывать такие факторы, как требования проекта, масштабируемость и поддержка."

  utter_microservices:
    - text: "Микросервисная архитектура — это подход к разработке, когда приложение разделяется на независимые сервисы, взаимодействующие между собой."

  utter_monolith:
    - text: "Монолитная архитектура — это подход, при котором всё приложение работает как единое целое."

  utter_integration:
    - text: "Интеграция систем может быть реализована через API Gateway, SOA или использование шины данных."

  utter_security:
    - text: "Для безопасности важно предусмотреть меры по защите данных, аутентификации и авторизации."

  utter_performance:
    - text: "Для улучшения производительности можно использовать кэширование, оптимизацию запросов и балансировку нагрузки."

  utter_scalability:
    - text: "Масштабируемость достигается с помощью горизонтального и вертикального масштабирования компонентов системы."

  utter_fault_tolerance:
    - text: "Отказоустойчивость может быть обеспечена за счет репликации данных и резервирования компонентов системы."

  utter_devops:
    - text: "DevOps помогает автоматизировать процессы разработки и развертывания через CI/CD."

  utter_containerization:
    - text: "Контейнеризация позволяет упаковать приложение с его зависимостями и развертывать его в любом окружении."

  utter_database_choice:
    - text: "Выбор базы данных зависит от требований к производительности, масштабируемости и консистентности данных."

  utter_methodologies:
    - text: "Agile и Waterfall — это две популярные методологии разработки, каждая из которых имеет свои преимущества и недостатки."

  utter_architecture_patterns:
    - text: "Популярные архитектурные паттерны включают MVC, CQRS и Event Sourcing."

  utter_documentation:
    - text: "Для документации архитектуры можно использовать схемы UML, диаграммы последовательностей и описание потоков данных."

  utter_cloud_technologies:
    - text: "AWS, Azure и Google Cloud предлагают множество сервисов для разработки и развертывания приложений в облаке."

  utter_monitoring:
    - text: "Мониторинг микросервисов играет важную роль. Для мониторинга можно использовать инструменты OpenTelemetry"

  utter_orchestration:
    - text: "Для оркестрации микросервисов можно использовать Kubernetes или Docker Swarm"

  utter_testing_info:
    - text: "Для тестирования микросервисов могут использоваться инструменты: Selenium, Postman, JMeter"

  utter_project_info:
    - text: "Это чат бот написанный с использованием Rasa и React для общения об архитектуре"

  utter_service_network:
    - text: "Service Mesh — достаточно простой интеграционный паттерн для обеспечения механизмов сетевой упругости, повышения безопасности и обозреваемости приложений"

actions:
  - utter_greet
  - utter_goodbye
  - utter_help
  - utter_describe_architecture
  - utter_choose_tech_stack
  - utter_microservices
  - utter_monolith
  - utter_integration
  - utter_security
  - utter_performance
  - utter_scalability
  - utter_fault_tolerance
  - utter_devops
  - utter_containerization
  - utter_database_choice
  - utter_methodologies
  - utter_architecture_patterns
  - utter_documentation
  - utter_cloud_technologies
  - utter_monitoring
  - utter_orchestration
  - utter_testing_info
  - utter_project_info
  - utter_service_network